<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title>Page de test</title>
	</head>
	<body>
		<form>
			<button type="button" id="dumpDatabase">Dump database</button>
		</form>
	</body>
	<input type="text" id="search">
	<div id="infos"></div>
	<ul id="databaseList"></ul>
	<img id="preview"></img>

	<script type="text/javascript" src="/ajax.js"></script>
	<script type="text/javascript" src="/colorGradient.js"></script>
	<script type="text/javascript">
	let search = document.querySelector('#search');
	let infos = document.querySelector('#infos');
	let dumpDatabase = document.querySelector('#dumpDatabase');
	let databaseList = document.querySelector('#databaseList');

	let rows = [];

	dumpDatabase.addEventListener('click', function(e) {
		ajax.get('/hbase/list').then(function(body) {
			rows = body;
			/*body.forEach(e => {
				let li = document.createElement('li');
				li.innerHTML = '<b>Row: </b><span>' + e['row'] + '</span> <i>latitude: </i>' + e['h:la'] + ' <i>longitude: </i>' + e['h:lo'];
				databaseList.appendChild(li);
			});*/
		}, function (err) {
			console.log(err);
		});
	});
	databaseList.addEventListener('click', function(e) {
		if (e.target.nodeName == 'SPAN') {
			const row = e.target.innerHTML;
			// build image
			//data, size, position
			ajax({url: '/hbase/' + row, method: 'get', type: 'arraybuffer'})
				.then(function(rawData) {
					const d = new Uint16Array(rawData);
					let size = { x: 256, y: 256 };
					let canvas = document.createElement('canvas');
					let ctx = canvas.getContext('2d');
					canvas.width = size.x;
					canvas.height = size.y;
					let id = ctx.createImageData(size.x, size.y);
					let data = id.data;
					let gradient = new ColorGradient();
					gradient.createRainbow();
					console.log(gradient);
					for (let i = 0, size = d.length; i < size; i++) {
						let I = i * 4;
						const color = gradient.getColorAtValue((d[i] + 7999)/16000);
						/*data[I] = (d[i] / 2000) * 255;
						data[I+1] = (d[i] / 4000) * 255;
						data[I+2] = (d[i] / 8000) * 255;*/
						data[I] = color.r * 255;
						data[I+1] = color.g * 255;
						data[I+2] = color.b * 255;
						data[I+3] = 255;
					}
					ctx.putImageData(id, 0, 0);36
					/*ctx.font = '22px monospace';
					ctx.fillStyle = '#ff0';
					ctx.strokeStyle = '#f0f';
					const text = `${this.position.x}E;${this.position.y}N`;
					ctx.fillText(text, 20, 42);
					ctx.strokeText(text, 20, 42);*/
					document.querySelector('#preview').src = canvas.toDataURL('image/png');
				});
		}
	});
	search.addEventListener('keyup', (e) => {
		if (e.target.value.length > 3) {
			databaseList.innerHTML = '';
			const regex = new RegExp(e.target.value, 'i');
			let filtered = rows.filter(e => regex.test(e['row']));
			filtered.slice(0, 1000).forEach(e => {
				let li = document.createElement('li');
				infos.innerHTML = filtered.length + ' results';
				li.innerHTML = '<b>Row: </b><span>' + e['row'] + '</span> <i>latitude: </i>' + e['h:la'] + ' <i>longitude: </i>' + e['h:lo'];
				databaseList.appendChild(li);
			});
		}
	});
	</script>
</html>
